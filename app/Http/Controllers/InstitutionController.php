<?php

namespace App\Http\Controllers;

use App\Models\Institution;
use App\Models\Municipality;
use Illuminate\Http\Request;
use Illuminate\Validation\ValidationException;

class InstitutionController extends Controller
{
    
    public function index()
    {
        try {
            $institutions = Institution::with(['municipality'])->get();
            $municipalities = Municipality::all();
        } catch (\Exception $e) {
            \Log::error('Error loading institutions: ' . $e->getMessage());
            $institutions = collect();
            $municipalities = collect();
            session()->flash('error', 'Error loading institutions data.');
        }
        
        return view('tables-institutions', compact('institutions', 'municipalities'));
    }

    public function store(Request $request)
    {
        try {
            $request->validate([
                'name' => 'required|string|max:255|unique:institutions,name',
                'address' => 'nullable|string|max:500',
                'municipality_id' => 'required|exists:municipalities,id',
            ], [
                'name.unique' => 'Ya existe una institución con este nombre.',
                'name.required' => 'El nombre de la institución es obligatorio.',
                'name.max' => 'El nombre no puede exceder 255 caracteres.',
                'address.max' => 'La dirección no puede exceder 500 caracteres.',
                'municipality_id.required' => 'Debe seleccionar un municipio.',
                'municipality_id.exists' => 'El municipio seleccionado no es válido.',
            ]);
            
            // Code will be automatically generated by the model
            Institution::create($request->all());
            
            return redirect()->route('institutions.index')
                            ->with('success', 'La institución fue creada con éxito.');
        } catch (ValidationException $e) {
            return redirect()->back()
                            ->withErrors($e->validator)
                            ->withInput();
        } catch (\Exception $e) {
            \Log::error('Error creating institution: ' . $e->getMessage());
            return redirect()->back()
                            ->withInput()
                            ->with('error', 'Error al crear la institución. Por favor intente nuevamente.');
        }
    }

    public function update(Request $request, $id)
    {
        try {
            $request->validate([
                'name' => 'required|string|max:255|unique:institutions,name,' . $id,
                'address' => 'nullable|string|max:500',
                'municipality_id' => 'required|exists:municipalities,id',
            ], [
                'name.unique' => 'Ya existe una institución con este nombre.',
                'name.required' => 'El nombre de la institución es obligatorio.',
                'name.max' => 'El nombre no puede exceder 255 caracteres.',
                'address.max' => 'La dirección no puede exceder 500 caracteres.',
                'municipality_id.required' => 'Debe seleccionar un municipio.',
                'municipality_id.exists' => 'El municipio seleccionado no es válido.',
            ]);
            
            $institution = Institution::findOrFail($id);
            $institution->update($request->all());
            
            return redirect()->route('institutions.index')
                            ->with('success', 'La institución fue actualizada con éxito.');
        } catch (ValidationException $e) {
            return redirect()->back()
                            ->withErrors($e->validator)
                            ->withInput();
        } catch (\Exception $e) {
            \Log::error('Error updating institution: ' . $e->getMessage());
            return redirect()->back()
                            ->withInput()
                            ->with('error', 'Error al actualizar la institución. Por favor intente nuevamente.');
        }
    }

    public function destroy($id)
    {
        try {
            $institution = Institution::findOrFail($id);
            $institution->delete();
            
            return redirect()->route('institutions.index')
                            ->with('success', 'La institución fue eliminada correctamente.');
        } catch (\Exception $e) {
            \Log::error('Error deleting institution: ' . $e->getMessage());
            return redirect()->back()
                            ->with('error', 'Error al eliminar la institución. Por favor intente nuevamente.');
        }
    }
}